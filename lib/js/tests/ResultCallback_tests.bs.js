// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block   = require("bs-platform/lib/js/block.js");
var Curry   = require("bs-platform/lib/js/curry.js");
var MongoDB = require("../src/MongoDB.bs.js");
var Respect = require("re-respect/lib/js/src/Respect.js");

function callbackConverter(x, cb) {
  return Curry._1(x, (function (err, result) {
                if (err !== null) {
                  return Curry._1(cb, /* Error */Block.__(1, [err]));
                } else {
                  return Curry._1(cb, /* Ok */Block.__(0, [result]));
                }
              }));
}

var AsyncHandler = /* module */[/* callbackConverter */callbackConverter];

var include = MongoDB.Make(AsyncHandler);

var connect = include[6];

var Mongo_004 = /* Cursor */include[0];

var Mongo_005 = /* InsertResult */include[1];

var Mongo_006 = /* DeleteResult */include[2];

var Mongo_007 = /* Collection */include[3];

var Mongo_008 = /* Db */include[4];

var Mongo_009 = /* MongoDb */include[5];

var Mongo = /* module */[
  /* MongoError */MongoDB.MongoError,
  /* ObjectID */MongoDB.ObjectID,
  /* Make */MongoDB.Make,
  /* AsyncHandler */AsyncHandler,
  Mongo_004,
  Mongo_005,
  Mongo_006,
  Mongo_007,
  Mongo_008,
  Mongo_009,
  /* connect */connect
];

Curry._1(Respect.Dsl[/* Async */12][/* register */3], Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "Mongo using result callbacks", /* :: */[
          Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "creating a valid connection", /* :: */[
                Curry._2(Respect.Dsl[/* Async */12][/* it */1], "succeeds", (function (_, don) {
                        return Curry._2(connect, "mongodb://127.0.0.1:27019", (function (res) {
                                      if (res.tag) {
                                        return Curry._2(don, /* Some */["No error was expected"], /* () */0);
                                      } else {
                                        return Curry._2(don, /* None */0, /* () */0);
                                      }
                                    }));
                      })),
                /* [] */0
              ]),
          /* :: */[
            Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "creating an invalid connection", /* :: */[
                  Curry._2(Respect.Dsl[/* Async */12][/* it */1], "succeeds", (function (_, don) {
                          return Curry._2(connect, "mongodb://127.0.0.1:9999", (function (res) {
                                        if (res.tag) {
                                          return Curry._2(don, /* None */0, /* () */0);
                                        } else {
                                          return Curry._2(don, /* Some */["This was expected to fail"], /* () */0);
                                        }
                                      }));
                        })),
                  /* [] */0
                ]),
            /* [] */0
          ]
        ]));

var Ctx = 0;

exports.Mongo = Mongo;
exports.Ctx   = Ctx;
/* include Not a pure module */
